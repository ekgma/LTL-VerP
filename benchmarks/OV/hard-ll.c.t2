START: 1001;
BUCHI: {13002, 78002, 36002};
CUTPOINT: {78001, 1001, 36002, 13002, 13001, 78002, 36001};

PRE: {p>=-64 && p<=63 && B>=-64 && B<=63 && q>=-64 && q<=63 && d>=-64 && d<=63 && A>=-64 && A<=63 && r>=-64 && r<=63  && B>=1};

FROM: 1001;
assume(A>=-64 && A<=63);
p := 1;
q := 0;
A := A;
r := A;
B := B;
d := B;
TO: 13001;

FROM: 1001;
assume(A<-64 || A>63);
p := 1;
q := 0;
A := A;
r := A;
B := B;
d := B;
TO: 13002;

FROM: 13001;
assume(q==0 && r==A && d== B*p);
assume(-1 * d  +  r>=0);
assume(A>=-64 && A<=63);
p := 2 * p;
q := q;
A := A;
r := r;
B := B;
d := 2 * d;
TO: 13001;

FROM: 13001;
assume(q==0 && r==A && d== B*p);
assume(-1 * d  +  r>=0);
assume(A<-64 || A>63);
p := 2 * p;
q := q;
A := A;
r := r;
B := B;
d := 2 * d;
TO: 13002;

FROM: 13002;
assume(q==0 && r==A && d== B*p);
assume(-1 * d  +  r>=0);
p := 2 * p;
q := q;
A := A;
r := r;
B := B;
d := 2 * d;
TO: 13002;

FROM: 13001;
assume(q==0 && r==A && d== B*p);
assume(-1 * 1  +  d  +  -1 * r>=0);
assume(A>=-64 && A<=63);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 36001;

FROM: 13001;
assume(q==0 && r==A && d== B*p);
assume(-1 * 1  +  d  +  -1 * r>=0);
assume(A<-64 || A>63);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 36002;

FROM: 13002;
assume(q==0 && r==A && d== B*p);
assume(-1 * 1  +  d  +  -1 * r>=0);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 36002;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -1 * p>=0);
assume(A>=-64 && A<=63);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36001;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -1 * p>=0);
assume(A<-64 || A>63);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36002;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -1 * p>=0);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -1 * p>=0);
assume(A>=-64 && A<=63);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36001;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -1 * p>=0);
assume(A<-64 || A>63);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36002;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -1 * p>=0);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -2 * 1  +  p>=0);
assume(A>=-64 && A<=63);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36001;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -2 * 1  +  p>=0);
assume(A<-64 || A>63);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36002;
assume(A==q*B+r && d== B*p);
assume((-1/2) * d  +  r>=0 && -2 * 1  +  p>=0);
p := (1/2) * p;
q := (1/2) * p  +  q;
A := A;
r := (-1/2) * d  +  r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -2 * 1  +  p>=0);
assume(A>=-64 && A<=63);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36001;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -2 * 1  +  p>=0);
assume(A<-64 || A>63);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36002;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  (1/2) * d  +  -1 * r>=0 && -2 * 1  +  p>=0);
p := (1/2) * p;
q := q;
A := A;
r := r;
B := B;
d := (1/2) * d;
TO: 36002;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  p>=0 && 1  +  -1 * p>=0);
assume(A>=-64 && A<=63);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 78001;

FROM: 36001;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  p>=0 && 1  +  -1 * p>=0);
assume(A<-64 || A>63);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 78002;

FROM: 36002;
assume(A==q*B+r && d== B*p);
assume(-1 * 1  +  p>=0 && 1  +  -1 * p>=0);
p := p;
q := q;
A := A;
r := r;
B := B;
d := d;
TO: 78002;

FROM: 78001;
TO: 78002;

FROM: 78002;
TO: 78002;
