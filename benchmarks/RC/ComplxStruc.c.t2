START: 1001;
BUCHI: {129002, 4002};
CUTPOINT: {129002, 129001, 4001, 4002, 1001};
PRE: {j>=-64 && j<=63 && i>=-64 && i<=63 };


FROM: 1001;
assume(i<0);
i := i;
j := i;
TO: 4001;

FROM: 1001;
assume(i>=0);
i := i;
j := i;
TO: 4002;

FROM: 4001;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4002;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4002;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4001;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4002;

FROM: 4002;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4001;

FROM: 4002;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4002;

FROM: 4001;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4002;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4002;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4001;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4002;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4002;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4001;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<0);
i := 0 * 1  +  i;
j := j;
TO: 4001;

FROM: 4001;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=0);
i := 0 * 1  +  i;
j := j;
TO: 4002;

FROM: 4002;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<0);
i := 0 * 1  +  i;
j := j;
TO: 4001;

FROM: 4002;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=0);
i := 0 * 1  +  i;
j := j;
TO: 4002;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4002;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4002;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4002;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4002;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4002;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4002;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4002;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4002;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4002;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
j := 1  +  j;
TO: 4002;

FROM: 4001;
assume(-1 * i>=0);
assume(i<0);
i := i;
j := j;
TO: 129001;

FROM: 4001;
assume(-1 * i>=0);
assume(i>=0);
i := i;
j := j;
TO: 129002;

FROM: 4002;
assume(-1 * i>=0);
assume(i<0);
i := i;
j := j;
TO: 129001;

FROM: 4002;
assume(-1 * i>=0);
assume(i>=0);
i := i;
j := j;
TO: 129002;

FROM: 129001;
assume(i<0);
TO: 129001;

FROM: 129001;
assume(i>=0);
TO: 129002;

FROM: 129002;
assume(i<0);
TO: 129001;

FROM: 129002;
assume(i>=0);
TO: 129002;
