START: 1001;
BUCHI: {60002};
CUTPOINT: {60001, 1001, 4001, 60002, 60003, 4003};
PRE: {range>=0 && range<=64 && i>=0 && i<=64 };


FROM: 1001;
assume(i>=0);
i := i;
range := 20 * 1;
TO: 4001;

FROM: 1001;
assume(i<0);
i := i;
range := 20 * 1;
TO: 4003;

FROM: 4001;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && i>=0);
assume(i>=0);
i := 0;
range := -1 * 1  +  range;
TO: 4001;

FROM: 4001;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && i>=0);
assume(i<0);
i := 0;
range := -1 * 1  +  range;
TO: 4003;

FROM: 4003;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && i>=0);
i := 0;
range := -1 * 1  +  range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i>=0);
i := 1  +  i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i<0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i>=0);
i := 1  +  i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i<0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  -1 * i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  i>=0 && i>=0);
assume(i>=0);
i := 0;
range := -1 * 1  +  range;
TO: 4001;

FROM: 4001;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  i>=0 && i>=0);
assume(i<0);
i := 0;
range := -1 * 1  +  range;
TO: 4003;

FROM: 4003;
assume(-1 * i  +  range>=0 && i  +  -1 * range>=0 && -1 * 1  +  i>=0 && i>=0);
i := 0;
range := -1 * 1  +  range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i>=0);
i := 1  +  i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i<0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i>=0);
i := 1  +  i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
assume(i<0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i>=0 && -1 * i  +  range>=0 && i  +  -1 * range>=0 && i>=0);
i := 1  +  i;
range := range;
TO: 4003;

FROM: 4001;
assume(i>=0 && -1 * i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(i>=0 && -1 * i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(i>=0 && -1 * i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * i>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(i>=0 && -1 * 1  +  i  +  -1 * range>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(i>=0 && -1 * 1  +  i  +  -1 * range>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(i>=0 && -1 * 1  +  i  +  -1 * range>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  -1 * i  +  range>=0 && -1 * 1  +  i  +  -1 * range>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(i>=0 && -1 * 1  +  -1 * i  +  range>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(i>=0 && -1 * 1  +  -1 * i  +  range>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(i>=0 && -1 * 1  +  -1 * i  +  range>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0 && -1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i>=0);
i := i;
range := range;
TO: 4001;

FROM: 4001;
assume(-1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
assume(i<0);
i := i;
range := range;
TO: 4003;

FROM: 4003;
assume(-1 * 1  +  -1 * i  +  range>=0 && i>=0 && -1 * i  +  range>=0);
i := i;
range := range;
TO: 4003;

FROM: 4001;
assume(-1 * 1  +  -1 * i>=0);
assume(i>=0);
i := i;
range := range;
TO: 60001;

FROM: 4001;
assume(-1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
range := range;
TO: 60003;

FROM: 4003;
assume(-1 * 1  +  -1 * i>=0);
i := i;
range := range;
TO: 60003;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0);
assume(i>=0);
i := i;
range := range;
TO: 60001;

FROM: 4001;
assume(-1 * 1  +  i  +  -1 * range>=0);
assume(i<0);
i := i;
range := range;
TO: 60003;

FROM: 4003;
assume(-1 * 1  +  i  +  -1 * range>=0);
i := i;
range := range;
TO: 60003;

FROM: 60001;
assume(i>=0);
TO: 60002;

FROM: 60002;
assume(i>=0);
TO: 60002;

FROM: 60001;
assume(i<0);
TO: 60003;

FROM: 60002;
assume(i<0);
TO: 60003;

FROM: 60003;
TO: 60003;
