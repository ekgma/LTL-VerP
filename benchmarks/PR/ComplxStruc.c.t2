START: 1000;
BUCHI: {1000, 4000, 129000};
CUTPOINT: {1000, 4000, 4001, 129000, 129001};
PRE: {j>=-64 && j<=63 && i>=-64 && i<=63 };


FROM: 1000;
assume(i>=-4);
i := i;
j := i;
TO: 4000;

FROM: 1000;
assume(i<=-5);
assume(i<=0);
i := i;
j := i;
TO: 4001;

FROM: 4000;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4000;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4001;
assume(-3 * 1  +  i  +  -1 * j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 2 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4000;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4000;

FROM: 4000;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4000;

FROM: 4001;
assume(2 * 1  +  -1 * i  +  j>=0 && 4 * 1  +  -1 * j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := 2 * 1  +  j;
TO: 4001;

FROM: 4000;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4000;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4001;
assume(-5 * 1  +  j>=0 && i  +  -1 * j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4000;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=-4);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4000;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<=-5);
assume(i<=0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=1);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4001;
assume(-2 * 1  +  -1 * j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<=0);
i := -1 * 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4000;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=-4);
i := 0 * 1  +  i;
j := j;
TO: 4000;

FROM: 4000;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<=-5);
assume(i<=0);
i := 0 * 1  +  i;
j := j;
TO: 4001;

FROM: 4001;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i>=1);
i := 0 * 1  +  i;
j := j;
TO: 4000;

FROM: 4001;
assume(1  +  j>=0 && -1 * 1  +  i>=0 && -1 * 1  +  -1 * j>=0 && -1 * 1  +  -1 * i  +  j>=0);
assume(i<=0);
i := 0 * 1  +  i;
j := j;
TO: 4001;

FROM: 4000;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4000;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4000;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4000;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && -1 * i>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4000;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4000;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4000;

FROM: 4001;
assume(-2 * 1  +  -1 * i  +  2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := -1 * 1  +  j;
TO: 4001;

FROM: 4000;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4000;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
j := 1  +  j;
TO: 4000;

FROM: 4001;
assume(1  +  i  +  -2 * j>=0 && j>=0 && -1 * 1  +  -1 * i  +  j>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
j := 1  +  j;
TO: 4001;

FROM: 4000;
assume(-1 * i>=0);
assume(i>=-4);
i := i;
j := j;
TO: 129000;

FROM: 4000;
assume(-1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
j := j;
TO: 129001;

FROM: 4001;
assume(-1 * i>=0);
assume(i>=1);
i := i;
j := j;
TO: 129000;

FROM: 4001;
assume(-1 * i>=0);
assume(i<=0);
i := i;
j := j;
TO: 129001;

FROM: 129000;
assume(i>=-4);
TO: 129000;

FROM: 129000;
assume(i<=-5);
assume(i<=0);
TO: 129001;

FROM: 129001;
assume(i>=1);
TO: 129000;

FROM: 129001;
assume(i<=0);
TO: 129001;
