START: 1000;
BUCHI: {58000, 1000};
CUTPOINT: {58001, 58000, 1001, 1000};
PRE: {i>=-64 && i<=63 };


FROM: 1000;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=-4);
i := 0 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=1);
i := 0 * 1  +  i;
TO: 1000;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=-4);
i := 1  +  i;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=1);
i := 1  +  i;
TO: 1000;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=0);
i := 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=-4);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=1);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 0 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 0 * 1  +  i;
TO: 1000;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := 1  +  i;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := 1  +  i;
TO: 1000;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=-4);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=1);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1000;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=-4);
i := i;
TO: 1000;

FROM: 1000;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=1);
i := i;
TO: 1000;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := i;
TO: 1001;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
assume(i>=-4);
i := i;
TO: 58000;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
assume(i<=-5);
assume(i<=0);
i := i;
TO: 58001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i>=1);
i := i;
TO: 58000;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i<=0);
i := i;
TO: 58001;

FROM: 58000;
assume(i>=-4);
TO: 58000;

FROM: 58000;
assume(i<=-5);
assume(i<=0);
TO: 58001;

FROM: 58001;
assume(i>=1);
TO: 58000;

FROM: 58001;
assume(i<=0);
TO: 58001;
