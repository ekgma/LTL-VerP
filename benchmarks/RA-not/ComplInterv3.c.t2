START: 1001;
BUCHI: {1002, 41004, 1004, 41002};
CUTPOINT: {41005, 1003, 1004, 41003, 41004, 1001, 1002, 41002};
PRE: {i>=0 && i<=64 };


FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1002;

FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := 1  +  i;
TO: 1004;

FROM: 1002;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 1  +  i;
TO: 1002;

FROM: 1003;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1003;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := 1  +  i;
TO: 1004;

FROM: 1004;
assume(-6 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 1  +  i;
TO: 1004;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1002;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1003;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1004;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 0;
TO: 1002;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 0;
TO: 1003;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := 0;
TO: 1004;

FROM: 1002;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1002;

FROM: 1003;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := 0;
TO: 1003;

FROM: 1003;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := 0;
TO: 1004;

FROM: 1004;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1004;

FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1002;

FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1001;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
TO: 1004;

FROM: 1002;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := 1  +  i;
TO: 1002;

FROM: 1003;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1003;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
TO: 1004;

FROM: 1004;
assume(-6 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := 1  +  i;
TO: 1004;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1002;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1003;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1004;
assume(-6 * 1  +  -1 * i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -1 * 1  +  i;
TO: 1004;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 0;
TO: 1002;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 0;
TO: 1003;

FROM: 1001;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 0;
TO: 1004;

FROM: 1002;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1002;

FROM: 1003;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 0;
TO: 1003;

FROM: 1003;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 0;
TO: 1004;

FROM: 1004;
assume(5 * 1  +  i>=0 && 5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1004;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i>=0);
i := i;
TO: 41002;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i>=0);
i := i;
TO: 41003;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i<0);
i := i;
TO: 41004;

FROM: 1002;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 41002;

FROM: 1003;
assume(i>=0 && -1 * i>=0);
assume(i>=0);
i := i;
TO: 41003;

FROM: 1003;
assume(i>=0 && -1 * i>=0);
assume(i<0);
i := i;
TO: 41004;

FROM: 1004;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 41004;

FROM: 41002;
TO: 41005;

FROM: 41005;
TO: 41005;

FROM: 41003;
assume(i>=0);
TO: 41003;

FROM: 41003;
assume(i<0);
TO: 41004;

FROM: 41004;
TO: 41004;
