START: 1001;
BUCHI: {48004, 48002, 13002, 13004};
CUTPOINT: {1001, 48003, 48005, 48004, 48002, 13003, 13002, 13004};

PRE: {u>=0 && u<=64 && v>=0 && v<=64 && b>=0 && b<=64 && x>=0 && x<=64 && y>=0 && y<=64 && a>=0 && a<=64  && a>=1 && b>=1};

FROM: 1001;
assume(a>=0);
a := a;
b := b;
u := b;
v := a;
x := a;
y := b;
TO: 13002;

FROM: 1001;
assume(a>=0);
a := a;
b := b;
u := b;
v := a;
x := a;
y := b;
TO: 13003;

FROM: 1001;
assume(a<0);
a := a;
b := b;
u := b;
v := a;
x := a;
y := b;
TO: 13004;

FROM: 13002;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0 && -1 * 1  +  -1 * x  +  y>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13002;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0 && -1 * 1  +  -1 * x  +  y>=0);
assume(a>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13003;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0 && -1 * 1  +  -1 * x  +  y>=0);
assume(a<0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13004;

FROM: 13004;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0 && -1 * 1  +  -1 * x  +  y>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13004;

FROM: 13002;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  -1 * x  +  y>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13002;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  -1 * x  +  y>=0);
assume(a>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13003;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  -1 * x  +  y>=0);
assume(a<0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13004;

FROM: 13004;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  -1 * x  +  y>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13004;

FROM: 13002;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13002;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0);
assume(a>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13003;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0);
assume(a<0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13004;

FROM: 13004;
assume(x*u + y*v == 2*a*b);
assume(-1 * 1  +  x  +  -1 * y>=0);
a := a;
b := b;
u := u;
v := u  +  v;
x := x  +  -1 * y;
y := y;
TO: 13004;

FROM: 13002;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  x  +  -1 * y>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13002;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  x  +  -1 * y>=0);
assume(a>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13003;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  x  +  -1 * y>=0);
assume(a<0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13004;

FROM: 13004;
assume(x*u + y*v == 2*a*b);
assume(-1 * x  +  y>=0 && -1 * 1  +  x  +  -1 * y>=0);
a := a;
b := b;
u := u  +  v;
v := v;
x := x;
y := -1 * x  +  y;
TO: 13004;

FROM: 13002;
assume(x*u + y*v == 2*a*b);
assume(x  +  -1 * y>=0 && -1 * x  +  y>=0);
a := a;
b := b;
u := u;
v := v;
x := x;
y := y;
TO: 48002;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(x  +  -1 * y>=0 && -1 * x  +  y>=0);
assume(a>=0);
a := a;
b := b;
u := u;
v := v;
x := x;
y := y;
TO: 48003;

FROM: 13003;
assume(x*u + y*v == 2*a*b);
assume(x  +  -1 * y>=0 && -1 * x  +  y>=0);
assume(a<0);
a := a;
b := b;
u := u;
v := v;
x := x;
y := y;
TO: 48004;

FROM: 13004;
assume(x*u + y*v == 2*a*b);
assume(x  +  -1 * y>=0 && -1 * x  +  y>=0);
a := a;
b := b;
u := u;
v := v;
x := x;
y := y;
TO: 48004;

FROM: 48002;
TO: 48005;

FROM: 48005;
TO: 48005;

FROM: 48003;
assume(a>=0);
TO: 48003;

FROM: 48003;
assume(a<0);
TO: 48004;

FROM: 48004;
TO: 48004;
