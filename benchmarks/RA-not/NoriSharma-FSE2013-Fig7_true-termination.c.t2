START: 1001;
BUCHI: {10002, 38004, 38002, 10004};
CUTPOINT: {38003, 10002, 10003, 38004, 1001, 38002, 10004, 38005};
PRE: {a>=0 && a<=64 && M>=0 && M<=64 && c>=0 && c<=64 && j>=0 && j<=64 && N>=0 && N<=64 && i>=0 && i<=64 && b>=0 && b<=64 };


FROM: 1001;
assume(M>=0);
a := i;
b := j;
c := 0;
i := i;
j := j;
M := M;
N := N;
TO: 10002;

FROM: 1001;
assume(M>=0);
a := i;
b := j;
c := 0;
i := i;
j := j;
M := M;
N := N;
TO: 10003;

FROM: 1001;
assume(M<0);
a := i;
b := j;
c := 0;
i := i;
j := j;
M := M;
N := N;
TO: 10004;

FROM: 10002;
assume(-1 * 1  +  M  +  -1 * i>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10002;

FROM: 10003;
assume(-1 * 1  +  M  +  -1 * i>=0);
assume(M>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10003;

FROM: 10003;
assume(-1 * 1  +  M  +  -1 * i>=0);
assume(M<0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10004;

FROM: 10004;
assume(-1 * 1  +  M  +  -1 * i>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10004;

FROM: 10002;
assume(-1 * 1  +  N  +  -1 * j>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10002;

FROM: 10003;
assume(-1 * 1  +  N  +  -1 * j>=0);
assume(M>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10003;

FROM: 10003;
assume(-1 * 1  +  N  +  -1 * j>=0);
assume(M<0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10004;

FROM: 10004;
assume(-1 * 1  +  N  +  -1 * j>=0);
a := a;
b := b;
c := 1  +  c;
i := 1  +  i;
j := 1  +  j;
M := M;
N := N;
TO: 10004;

FROM: 10002;
assume(-1 * M  +  i>=0 && -1 * N  +  j>=0);
a := a;
b := b;
c := c;
i := i;
j := j;
M := M;
N := N;
TO: 38002;

FROM: 10003;
assume(-1 * M  +  i>=0 && -1 * N  +  j>=0);
assume(M>=0);
a := a;
b := b;
c := c;
i := i;
j := j;
M := M;
N := N;
TO: 38003;

FROM: 10003;
assume(-1 * M  +  i>=0 && -1 * N  +  j>=0);
assume(M<0);
a := a;
b := b;
c := c;
i := i;
j := j;
M := M;
N := N;
TO: 38004;

FROM: 10004;
assume(-1 * M  +  i>=0 && -1 * N  +  j>=0);
a := a;
b := b;
c := c;
i := i;
j := j;
M := M;
N := N;
TO: 38004;

FROM: 38002;
TO: 38005;

FROM: 38005;
TO: 38005;

FROM: 38003;
assume(M>=0);
TO: 38003;

FROM: 38003;
assume(M<0);
TO: 38004;

FROM: 38004;
TO: 38004;
