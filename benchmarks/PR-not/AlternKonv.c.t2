START: 1000;
BUCHI: {64001, 1001};
CUTPOINT: {64001, 1000, 64000, 1002, 1001, 64002};
PRE: {i>=-64 && i<=63 };


FROM: 1000;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -2 * 1  +  -1 * i;
TO: 1000;

FROM: 1000;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := -2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := -2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := -2 * 1  +  -1 * i;
TO: 1002;

FROM: 1002;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -2 * 1  +  -1 * i;
TO: 1002;

FROM: 1000;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 2 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := 2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := 2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := 2 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 2 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
i := 2 * 1  +  -1 * i;
TO: 1000;

FROM: 1000;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := 2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := 2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := 2 * 1  +  -1 * i;
TO: 1002;

FROM: 1002;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
i := 2 * 1  +  -1 * i;
TO: 1002;

FROM: 1000;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
i := -2 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := -2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := -2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := -2 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  -1 * i>=0);
i := -2 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -2 * 1  +  -1 * i;
TO: 1000;

FROM: 1000;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := -2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := -2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := -2 * 1  +  -1 * i;
TO: 1002;

FROM: 1002;
assume(-3 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -2 * 1  +  -1 * i;
TO: 1002;

FROM: 1000;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 2 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := 2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := 2 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(2 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 2 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  i>=0);
i := 2 * 1  +  -1 * i;
TO: 1000;

FROM: 1000;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := 2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 2 * 1  +  -1 * i;
TO: 1001;

FROM: 1001;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := 2 * 1  +  -1 * i;
TO: 1002;

FROM: 1002;
assume(-3 * 1  +  i>=0 && i>=0 && -1 * 1  +  i>=0);
i := 2 * 1  +  -1 * i;
TO: 1002;

FROM: 1000;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  i>=0);
i := -2 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := -2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := -2 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := -2 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(2 * 1  +  -1 * i>=0 && i>=0 && -1 * 1  +  i>=0);
i := -2 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 64000;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := i;
TO: 64001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i<=0);
i := i;
TO: 64001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i>0);
i := i;
TO: 64002;

FROM: 1002;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 64002;

FROM: 64000;
TO: 64000;

FROM: 64000;
assume(i<-5);
assume(i<=0);
TO: 64001;

FROM: 64001;
assume(i<=0);
TO: 64001;

FROM: 64001;
assume(i>0);
TO: 64002;

FROM: 64002;
TO: 64002;
