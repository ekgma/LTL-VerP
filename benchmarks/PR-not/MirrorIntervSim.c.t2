START: 1000;
BUCHI: {60001, 1001};
CUTPOINT: {60002, 60000, 1002, 1001, 60001, 1000};
PRE: {i>=-64 && i<=63 };


FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0);
i := -5 * 1;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := -5 * 1;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0);
assume(i<=0);
i := -5 * 1;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0);
assume(i>0);
i := -5 * 1;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0);
i := -5 * 1;
TO: 1002;

FROM: 1000;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 35 * 1;
TO: 1000;

FROM: 1000;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := 35 * 1;
TO: 1001;

FROM: 1001;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := 35 * 1;
TO: 1001;

FROM: 1001;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := 35 * 1;
TO: 1002;

FROM: 1002;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 35 * 1;
TO: 1002;

FROM: 1000;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1000;

FROM: 1000;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := 0;
TO: 1002;

FROM: 1002;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1002;

FROM: 1000;
assume(-36 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1000;

FROM: 1000;
assume(-36 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-36 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-36 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>0);
i := 0;
TO: 1002;

FROM: 1002;
assume(-36 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := 0;
TO: 1002;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -5 * 1;
TO: 1000;

FROM: 1000;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := -5 * 1;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := -5 * 1;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := -5 * 1;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -5 * 1;
TO: 1002;

FROM: 1000;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 35 * 1;
TO: 1000;

FROM: 1000;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := 35 * 1;
TO: 1001;

FROM: 1001;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 35 * 1;
TO: 1001;

FROM: 1001;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := 35 * 1;
TO: 1002;

FROM: 1002;
assume(-31 * 1  +  i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 35 * 1;
TO: 1002;

FROM: 1000;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -1 * 1  +  i;
TO: 1000;

FROM: 1000;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(30 * 1  +  -1 * i>=0 && i>=0 && 5 * 1  +  i>=0 && 35 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1000;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1000;

FROM: 1000;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := 0;
TO: 1002;

FROM: 1002;
assume(-6 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1002;

FROM: 1000;
assume(-36 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1000;

FROM: 1000;
assume(-36 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<-5);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-36 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<=0);
i := 0;
TO: 1001;

FROM: 1001;
assume(-36 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>0);
i := 0;
TO: 1002;

FROM: 1002;
assume(-36 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := 0;
TO: 1002;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 60000;

FROM: 1000;
assume(i>=0 && -1 * i>=0);
assume(i<-5);
assume(i<=0);
i := i;
TO: 60001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i<=0);
i := i;
TO: 60001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i>0);
i := i;
TO: 60002;

FROM: 1002;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 60002;

FROM: 60000;
TO: 60000;

FROM: 60000;
assume(i<-5);
assume(i<=0);
TO: 60001;

FROM: 60001;
assume(i<=0);
TO: 60001;

FROM: 60001;
assume(i>0);
TO: 60002;

FROM: 60002;
TO: 60002;
