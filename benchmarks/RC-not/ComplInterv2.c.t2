START: 1001;
BUCHI: {1002, 58002};
CUTPOINT: {1003, 1002, 58001, 58002, 58003, 1001};
PRE: {i>=-64 && i<=63 };


FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := 0 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := 0 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=0);
i := 0 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := 0 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1003;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-5 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 0 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 0 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 0 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(0 * 1  +  i>=0 && -1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 0 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1003;
assume(-1 * 1  +  -1 * i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1001;

FROM: 1001;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i<0);
i := -1 * 1  +  i;
TO: 1002;

FROM: 1002;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
assume(i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1003;
assume(-1 * 1  +  i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0);
i := -1 * 1  +  i;
TO: 1003;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-1 * i>=0 && i>=0 && 4 * 1  +  i>=0 && 4 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-5 * 1  +  -1 * i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1001;

FROM: 1001;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i<0);
i := i;
TO: 1002;

FROM: 1002;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
assume(i>=0);
i := i;
TO: 1003;

FROM: 1003;
assume(-5 * 1  +  i>=0 && -1 * 1  +  i>=0);
i := i;
TO: 1003;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 58001;

FROM: 1001;
assume(i>=0 && -1 * i>=0);
assume(i<0);
i := i;
TO: 58002;

FROM: 1002;
assume(i>=0 && -1 * i>=0);
assume(i<0);
i := i;
TO: 58002;

FROM: 1002;
assume(i>=0 && -1 * i>=0);
assume(i>=0);
i := i;
TO: 58003;

FROM: 1003;
assume(i>=0 && -1 * i>=0);
i := i;
TO: 58003;

FROM: 58001;
TO: 58001;

FROM: 58001;
assume(i<0);
TO: 58002;

FROM: 58002;
assume(i<0);
TO: 58002;

FROM: 58002;
assume(i>=0);
TO: 58003;

FROM: 58003;
TO: 58003;
